// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Uspeak.Persistence;

namespace Uspeak.Migrations
{
    [DbContext(typeof(UspeakDbContext))]
    partial class UspeakDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Uspeak.Data.Models.Courses.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CssClassesString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LessonDurationMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("LessonsQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PromoImageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PromoImageId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30bc01bf-8cbe-4252-a5f6-4017f601c8c3"),
                            CssClassesString = "eng children",
                            Description = @"Курс поможет Вашему ребенку подготовиться к школе не только по основным предметам, 
                        но и включает в себя занятия английским. В ходе занятий ребенок в игровой форме познакомиться 
                        с русским и английским  алфавитами, научится читать на русском и английском, научится считать. 
                        Курс поможет развитию логики, любознательности и не отпугнет желание ребенка учиться. 
                        Занятия проходят в мини-группах (до 4 человек ), что обеспечивает индивидуальный подход к каждому малышу.",
                            Name = "Подготовка к школе с английским языком"
                        },
                        new
                        {
                            Id = new Guid("73ccf858-3467-4a6b-a8ac-ee7cfc85f620"),
                            CssClassesString = "eng teenagers",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка: 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс по английскому для детей и подростков ( от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("0bd380cf-78af-4338-a508-bc41afe6c1af"),
                            CssClassesString = "eng adults",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка: 
                        говорение, грамматика, аудирование, фонетика,  чтение  и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс английского для взрослых"
                        },
                        new
                        {
                            Id = new Guid("59ac3930-3825-4cb2-9fe7-4ff499947176"),
                            CssClassesString = "eng exam",
                            Description = @"Курс направлен на развитие всех аспектов языка. 
                        Особое внимание уделяется рассмотрению специфики тестовых заданий, 
                        а также методики их выполнения. Также в ходе курса предусмотрены пробные тестирования 
                        с тренировкой заполнения бланков.",
                            Name = "Подготовка к ОГЭ и ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("c401cbbc-5e22-4360-b5c5-574167cc9cf8"),
                            CssClassesString = "eng adults",
                            Description = "Если вы хотите общаться без помощи гида в отеле, аэропорту, гостинице или в городе, тогда этот курс для Вас.",
                            Name = "Туристический английский"
                        },
                        new
                        {
                            Id = new Guid("a032649c-5f7d-4a64-b13b-468f46764e98"),
                            CssClassesString = "eng",
                            Description = @"Отличный способ отдохнуть с пользой. Кинозал открыт как для детей, так и для взрослых. 
                        Мы смотрим фильмы в оригинале. Перед просмотром каждый получает рабочую тетрадь, 
                        в которой подготовлены и разобраны лексические (слова) и грамматические аспекты, 
                        встречаемые в фильме. Все это поможет комфортно и понятно 😊 посмотреть фильм. 
                        После кино-сеанса мы, конечно, обсудим фильм и все, возможно, появившиеся вопросы.",
                            Name = "Кинозал на английском"
                        },
                        new
                        {
                            Id = new Guid("b975c806-db88-414c-9e00-9d245ac7acc9"),
                            CssClassesString = "eng",
                            Description = @"За чашкой чая поболтаем на английском с носителем языка. 
                        Курс подойдет тем, кто хочет попрактиковать разговорную речь или наконец-то снять языковой барьер.
                        Занятие будет комфортно для любого уровня – группа будет подобрана индивидуально для Вас.",
                            Name = "Английский разговорный клуб “Tea and talk”"
                        },
                        new
                        {
                            Id = new Guid("5da65f09-8783-4eae-9d77-658c63b11116"),
                            CssClassesString = "de teenagers",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка: 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс по немецкому для детей и подростков (от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("91cfb955-12a6-464a-b8f1-87b40c25fce7"),
                            CssClassesString = "de adults",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка: 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс немецкого для взрослых"
                        },
                        new
                        {
                            Id = new Guid("c182e464-9ccb-4e26-812f-4c90d178f57f"),
                            CssClassesString = "de",
                            Description = @"Курс подойдет тем, кто хочет попрактиковать разговорную речь или наконец-то снять языковой барьер. 
                        Занятие будет комфортно для любого уровня – группа будет подобрана индивидуально для Вас.",
                            Name = "Разговорный немецкий"
                        },
                        new
                        {
                            Id = new Guid("59baec0a-54f7-4b35-bb09-53df0468f198"),
                            CssClassesString = "fr teenagers",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс по французскому для детей и подростков ( от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("6e77f097-c273-42f6-bb1e-bf0d25b1bbe7"),
                            CssClassesString = "fr adults",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка: 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс французского для взрослых"
                        },
                        new
                        {
                            Id = new Guid("df87b337-60b6-4011-b781-3cd2d8dce904"),
                            CssClassesString = "fr",
                            Description = @"Курс подойдет тем, кто хочет попрактиковать разговорную речь или наконец-то снять языковой барьер. 
                        Занятие будет комфортно для любого уровня – группа будет подобрана индивидуально для Вас.",
                            Name = "Разговорный французский"
                        },
                        new
                        {
                            Id = new Guid("8b4739e7-61d1-4213-8e61-433c91a87a1e"),
                            CssClassesString = "it teenagers",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс по итальянскому для детей и подростков ( от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("872e64dd-fcd5-4650-b454-17d82f43a2a7"),
                            CssClassesString = "it adults",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс итальянского для взрослых"
                        },
                        new
                        {
                            Id = new Guid("0ff2e69b-05fa-4e3c-8f16-b85e699baee3"),
                            CssClassesString = "it",
                            Description = @"Курс подойдет тем, кто хочет попрактиковать разговорную речь или наконец-то снять языковой барьер. 
                        Занятие будет комфортно для любого уровня – группа будет подобрана индивидуально для Вас.",
                            Name = "Разговорный итальянский"
                        },
                        new
                        {
                            Id = new Guid("59cbe049-bc81-4f19-9264-707ac2734d77"),
                            CssClassesString = "ch teenagers",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс по китайскому для детей и подростков ( от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("32a53c0f-87ff-403d-b3f2-7aa978c37531"),
                            CssClassesString = "ch adults",
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            Name = "Общий курс китайского для взрослых"
                        },
                        new
                        {
                            Id = new Guid("b18c7332-bbbd-44bf-987e-313f43fd55e0"),
                            CssClassesString = "math children",
                            Description = @"Курс направлен на развитие математических знаний, а также на устранение пробелов знаний.
                        Занятие ведет опытный педагог, который найдет ключик к любому малышу. 
                        Занятия могут быть как индивидуальными, так и в мини-группе (до 3 человек)",
                            Name = "Курс для дошкольников"
                        },
                        new
                        {
                            Id = new Guid("6bedac8d-367f-4157-ba9c-85bf06af4827"),
                            CssClassesString = "math teenagers",
                            Description = "Курс направлен на развитие математических знаний, а также на устранение пробелов знаний.",
                            Name = "Курс для детей младшей, средней и старшей школы"
                        },
                        new
                        {
                            Id = new Guid("ad2f81e7-8107-4eb5-8c11-9086335fe7c2"),
                            CssClassesString = "math exam",
                            Description = @"Курс направлен на развитие всех аспектов предмета. 
                        Особое внимание уделяется рассмотрению специфики тестовых заданий, а также методики их выполнения. 
                        Также в ходе курса предусмотрены пробные тестирования с тренировкой заполнения экзаменационных бланков.",
                            Name = "Подготовка к ОГЭ и ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("38e207fc-de41-47fa-bb9b-912e83328896"),
                            CssClassesString = "physics teenagers",
                            Description = "Курс направлен на развитие и углубление знаний, а также на устранение пробелов знаний.",
                            Name = "Курс для детей средней и старшей школы"
                        },
                        new
                        {
                            Id = new Guid("89268a4f-1774-401f-8083-d2b316c20975"),
                            CssClassesString = "physics exam",
                            Description = @"Курс направлен на развитие всех аспектов языка. 
                        Особое внимание уделяется рассмотрению специфики тестовых заданий, 
                        а также методики их выполнения. Также в ходе курса предусмотрены пробные тестирования 
                        с тренировкой заполнения бланков.",
                            Name = "Подготовка к ОГЭ и ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("0b5c416f-4bd6-43c2-86c7-f37bb9284a01"),
                            CssClassesString = "children",
                            Description = @"«Кубики Зайцева» — пособие для обучения чтению с двух лет. 
                        Эта методика обучения чтению прошла испытание временем, ведь уже более 20 лет она пользуется 
                        огромной популярностью как среди родителей, так и педагогов дошкольных учреждений. 
                        Обучение с помощью кубиков  обеспечивает наглядность и системность подачи материала. 
                        Занятия проходят в игровой форме.",
                            Name = "Обучение чтению на основе кубиков Зайцева"
                        });
                });

            modelBuilder.Entity("Uspeak.Data.Models.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EnityKind")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("30bc01bf-8cbe-4252-a5f6-4017f601c8c3"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Курс поможет Вашему ребенку подготовиться к школе не только по основным предметам, 
                        но и включает в себя занятия английским. В ходе занятий ребенок в игровой форме познакомиться 
                        с русским и английским  алфавитами, научится читать на русском и английском, научится считать. 
                        Курс поможет развитию логики, любознательности и не отпугнет желание ребенка учиться. 
                        Занятия проходят в мини-группах (до 4 человек ), что обеспечивает индивидуальный подход к каждому малышу.",
                            EnityKind = 2,
                            Name = "Подготовка к школе с английским языком"
                        },
                        new
                        {
                            Id = new Guid("73ccf858-3467-4a6b-a8ac-ee7cfc85f620"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс по английскому для детей и подростков ( от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("0bd380cf-78af-4338-a508-bc41afe6c1af"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика,  чтение  и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс английского для взрослых"
                        },
                        new
                        {
                            Id = new Guid("59ac3930-3825-4cb2-9fe7-4ff499947176"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Курс направлен на развитие всех аспектов языка. 
                        Особое внимание уделяется рассмотрению специфики тестовых заданий, 
                        а также методики их выполнения. Также в ходе курса предусмотрены пробные тестирования 
                        с тренировкой заполнения бланков.",
                            EnityKind = 2,
                            Name = "Подготовка к ОГЭ и ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("c401cbbc-5e22-4360-b5c5-574167cc9cf8"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Если вы хотите общаться без помощи гида в отеле, аэропорту, гостинице или в городе, тогда этот курс для Вас.",
                            EnityKind = 2,
                            Name = "Туристический английский"
                        },
                        new
                        {
                            Id = new Guid("a032649c-5f7d-4a64-b13b-468f46764e98"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Отличный способ отдохнуть с пользой. Кинозал открыт как для детей, так и для взрослых. 
                        Мы смотрим фильмы в оригинале. Перед просмотром каждый получает рабочую тетрадь, 
                        в которой подготовлены и разобраны лексические (слова) и грамматические аспекты, 
                        встречаемые в фильме. Все это поможет комфортно и понятно 😊 посмотреть фильм. 
                        После кино-сеанса мы, конечно, обсудим фильм и все, возможно, появившиеся вопросы.",
                            EnityKind = 2,
                            Name = "Кинозал на английском"
                        },
                        new
                        {
                            Id = new Guid("b975c806-db88-414c-9e00-9d245ac7acc9"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"За чашкой чая поболтаем на английском с носителем языка. 
                        Курс подойдет тем, кто хочет попрактиковать разговорную речь или наконец-то снять языковой барьер.
                        Занятие будет комфортно для любого уровня – группа будет подобрана индивидуально для Вас.",
                            EnityKind = 2,
                            Name = "Английский разговорный клуб “Tea and talk”"
                        },
                        new
                        {
                            Id = new Guid("5da65f09-8783-4eae-9d77-658c63b11116"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика,  чтение  и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс по немецкому для детей и подростков (от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("91cfb955-12a6-464a-b8f1-87b40c25fce7"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика,  чтение  и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс немецкого для взрослых"
                        },
                        new
                        {
                            Id = new Guid("c182e464-9ccb-4e26-812f-4c90d178f57f"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Курс подойдет тем, кто хочет попрактиковать разговорную речь или наконец-то снять языковой барьер. 
                        Занятие будет комфортно для любого уровня – группа будет подобрана индивидуально для Вас.",
                            EnityKind = 2,
                            Name = "Разговорный немецкий"
                        },
                        new
                        {
                            Id = new Guid("59baec0a-54f7-4b35-bb09-53df0468f198"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика,  чтение  и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс по французскому для детей и подростков ( от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("6e77f097-c273-42f6-bb1e-bf0d25b1bbe7"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс французского для взрослых"
                        },
                        new
                        {
                            Id = new Guid("df87b337-60b6-4011-b781-3cd2d8dce904"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Курс подойдет тем, кто хочет попрактиковать разговорную речь или наконец-то снять языковой барьер. 
                        Занятие будет комфортно для любого уровня – группа будет подобрана индивидуально для Вас.",
                            EnityKind = 2,
                            Name = "Разговорный французский"
                        },
                        new
                        {
                            Id = new Guid("8b4739e7-61d1-4213-8e61-433c91a87a1e"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс по итальянскому для детей и подростков ( от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("872e64dd-fcd5-4650-b454-17d82f43a2a7"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс итальянского для взрослых"
                        },
                        new
                        {
                            Id = new Guid("0ff2e69b-05fa-4e3c-8f16-b85e699baee3"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Курс подойдет тем, кто хочет попрактиковать разговорную речь или наконец-то снять языковой барьер. 
                        Занятие будет комфортно для любого уровня – группа будет подобрана индивидуально для Вас.",
                            EnityKind = 2,
                            Name = "Разговорный итальянский"
                        },
                        new
                        {
                            Id = new Guid("59cbe049-bc81-4f19-9264-707ac2734d77"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс по китайскому для детей и подростков ( от 5 лет)"
                        },
                        new
                        {
                            Id = new Guid("32a53c0f-87ff-403d-b3f2-7aa978c37531"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Общий курс подразумевает изучение основных аспектов языка : 
                        говорение, грамматика, аудирование, фонетика, чтение и письмо. 
                        Этот курс походит для любого уровня владения языком – курс будет подобран индивидуально для Вас. 
                        Занятия могут быть в группе и индивидуально, как в студии, так и on-line.",
                            EnityKind = 2,
                            Name = "Общий курс китайского для взрослых"
                        },
                        new
                        {
                            Id = new Guid("b18c7332-bbbd-44bf-987e-313f43fd55e0"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Курс направлен на развитие математических знаний, а также на устранение пробелов знаний.
                        Занятие ведет опытный педагог, который найдет ключик к любому малышу. 
                        Занятия могут быть как индивидуальными, так и в мини-группе (до 3 человек)",
                            EnityKind = 2,
                            Name = "Курс для дошкольников"
                        },
                        new
                        {
                            Id = new Guid("6bedac8d-367f-4157-ba9c-85bf06af4827"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Курс направлен на развитие математических знаний, а также на устранение пробелов знаний.",
                            EnityKind = 2,
                            Name = "Курс для детей младшей,  средней  и старшей школы"
                        },
                        new
                        {
                            Id = new Guid("ad2f81e7-8107-4eb5-8c11-9086335fe7c2"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Курс направлен на развитие всех аспектов предмета. 
                        Особое внимание уделяется рассмотрению специфики тестовых заданий, а также методики их выполнения. 
                        Также в ходе курса предусмотрены пробные тестирования с тренировкой заполнения экзаменационных бланков.",
                            EnityKind = 2,
                            Name = "Подготовка к ОГЭ и ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("38e207fc-de41-47fa-bb9b-912e83328896"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Курс направлен на развитие и углубление знаний, а также на устранение пробелов знаний.",
                            EnityKind = 2,
                            Name = "Курс для детей средней и старшей школы"
                        },
                        new
                        {
                            Id = new Guid("89268a4f-1774-401f-8083-d2b316c20975"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"Курс направлен на развитие всех аспектов языка. 
                        Особое внимание уделяется рассмотрению специфики тестовых заданий, 
                        а также методики их выполнения. Также в ходе курса предусмотрены пробные тестирования 
                        с тренировкой заполнения бланков.",
                            EnityKind = 2,
                            Name = "Подготовка к ОГЭ и ЕГЭ"
                        },
                        new
                        {
                            Id = new Guid("0b5c416f-4bd6-43c2-86c7-f37bb9284a01"),
                            CreatedTime = new DateTime(2020, 8, 6, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = @"«Кубики Зайцева» — пособие для обучения чтению с двух лет. 
                        Эта методика обучения чтению прошла испытание временем, ведь уже более 20 лет она пользуется 
                        огромной популярностью как среди родителей, так и педагогов дошкольных учреждений. 
                        Обучение с помощью кубиков  обеспечивает наглядность  и системность подачи материала. 
                        Занятия проходят в игровой форме.",
                            EnityKind = 2,
                            Name = "Обучение чтению на основе кубиков Зайцева"
                        });
                });

            modelBuilder.Entity("Uspeak.Data.Models.EntityTag", b =>
                {
                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntityId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("EntitiesTags");

                    b.HasData(
                        new
                        {
                            EntityId = new Guid("0b5c416f-4bd6-43c2-86c7-f37bb9284a01"),
                            TagId = new Guid("2b474a26-76d2-45ee-be3e-f38eca83d9ee")
                        },
                        new
                        {
                            EntityId = new Guid("38e207fc-de41-47fa-bb9b-912e83328896"),
                            TagId = new Guid("a6eecf1c-207a-4214-9897-bb2403aaf9d0")
                        },
                        new
                        {
                            EntityId = new Guid("38e207fc-de41-47fa-bb9b-912e83328896"),
                            TagId = new Guid("9608a36e-6e89-4852-bab4-c4c06454c1f0")
                        },
                        new
                        {
                            EntityId = new Guid("89268a4f-1774-401f-8083-d2b316c20975"),
                            TagId = new Guid("a6eecf1c-207a-4214-9897-bb2403aaf9d0")
                        },
                        new
                        {
                            EntityId = new Guid("89268a4f-1774-401f-8083-d2b316c20975"),
                            TagId = new Guid("1dceded6-3990-4cb3-bc2e-936d0ae7f79d")
                        },
                        new
                        {
                            EntityId = new Guid("b18c7332-bbbd-44bf-987e-313f43fd55e0"),
                            TagId = new Guid("2b474a26-76d2-45ee-be3e-f38eca83d9ee")
                        },
                        new
                        {
                            EntityId = new Guid("b18c7332-bbbd-44bf-987e-313f43fd55e0"),
                            TagId = new Guid("866787e8-9e2e-48ae-aedd-0dcbafa5edcc")
                        },
                        new
                        {
                            EntityId = new Guid("6bedac8d-367f-4157-ba9c-85bf06af4827"),
                            TagId = new Guid("9608a36e-6e89-4852-bab4-c4c06454c1f0")
                        },
                        new
                        {
                            EntityId = new Guid("6bedac8d-367f-4157-ba9c-85bf06af4827"),
                            TagId = new Guid("866787e8-9e2e-48ae-aedd-0dcbafa5edcc")
                        },
                        new
                        {
                            EntityId = new Guid("ad2f81e7-8107-4eb5-8c11-9086335fe7c2"),
                            TagId = new Guid("866787e8-9e2e-48ae-aedd-0dcbafa5edcc")
                        },
                        new
                        {
                            EntityId = new Guid("ad2f81e7-8107-4eb5-8c11-9086335fe7c2"),
                            TagId = new Guid("1dceded6-3990-4cb3-bc2e-936d0ae7f79d")
                        },
                        new
                        {
                            EntityId = new Guid("59cbe049-bc81-4f19-9264-707ac2734d77"),
                            TagId = new Guid("9608a36e-6e89-4852-bab4-c4c06454c1f0")
                        },
                        new
                        {
                            EntityId = new Guid("59cbe049-bc81-4f19-9264-707ac2734d77"),
                            TagId = new Guid("bf53a489-cdca-47c0-ac5c-3437c47c19c6")
                        },
                        new
                        {
                            EntityId = new Guid("32a53c0f-87ff-403d-b3f2-7aa978c37531"),
                            TagId = new Guid("bf53a489-cdca-47c0-ac5c-3437c47c19c6")
                        },
                        new
                        {
                            EntityId = new Guid("32a53c0f-87ff-403d-b3f2-7aa978c37531"),
                            TagId = new Guid("d1a18186-9b28-4e8c-8d2b-958c0658c9f5")
                        },
                        new
                        {
                            EntityId = new Guid("8b4739e7-61d1-4213-8e61-433c91a87a1e"),
                            TagId = new Guid("b66d4365-0bb7-4ea0-9c63-86166aec8aa3")
                        },
                        new
                        {
                            EntityId = new Guid("8b4739e7-61d1-4213-8e61-433c91a87a1e"),
                            TagId = new Guid("9608a36e-6e89-4852-bab4-c4c06454c1f0")
                        },
                        new
                        {
                            EntityId = new Guid("872e64dd-fcd5-4650-b454-17d82f43a2a7"),
                            TagId = new Guid("d1a18186-9b28-4e8c-8d2b-958c0658c9f5")
                        },
                        new
                        {
                            EntityId = new Guid("872e64dd-fcd5-4650-b454-17d82f43a2a7"),
                            TagId = new Guid("b66d4365-0bb7-4ea0-9c63-86166aec8aa3")
                        },
                        new
                        {
                            EntityId = new Guid("0ff2e69b-05fa-4e3c-8f16-b85e699baee3"),
                            TagId = new Guid("b66d4365-0bb7-4ea0-9c63-86166aec8aa3")
                        },
                        new
                        {
                            EntityId = new Guid("59baec0a-54f7-4b35-bb09-53df0468f198"),
                            TagId = new Guid("9608a36e-6e89-4852-bab4-c4c06454c1f0")
                        },
                        new
                        {
                            EntityId = new Guid("59baec0a-54f7-4b35-bb09-53df0468f198"),
                            TagId = new Guid("c4e7b67e-809a-40d2-a222-0a12f35ba22f")
                        },
                        new
                        {
                            EntityId = new Guid("6e77f097-c273-42f6-bb1e-bf0d25b1bbe7"),
                            TagId = new Guid("c4e7b67e-809a-40d2-a222-0a12f35ba22f")
                        },
                        new
                        {
                            EntityId = new Guid("6e77f097-c273-42f6-bb1e-bf0d25b1bbe7"),
                            TagId = new Guid("d1a18186-9b28-4e8c-8d2b-958c0658c9f5")
                        },
                        new
                        {
                            EntityId = new Guid("df87b337-60b6-4011-b781-3cd2d8dce904"),
                            TagId = new Guid("c4e7b67e-809a-40d2-a222-0a12f35ba22f")
                        },
                        new
                        {
                            EntityId = new Guid("5da65f09-8783-4eae-9d77-658c63b11116"),
                            TagId = new Guid("fff0e828-e9c8-4ae5-b33a-df1c1f23f874")
                        },
                        new
                        {
                            EntityId = new Guid("5da65f09-8783-4eae-9d77-658c63b11116"),
                            TagId = new Guid("9608a36e-6e89-4852-bab4-c4c06454c1f0")
                        },
                        new
                        {
                            EntityId = new Guid("91cfb955-12a6-464a-b8f1-87b40c25fce7"),
                            TagId = new Guid("fff0e828-e9c8-4ae5-b33a-df1c1f23f874")
                        },
                        new
                        {
                            EntityId = new Guid("91cfb955-12a6-464a-b8f1-87b40c25fce7"),
                            TagId = new Guid("d1a18186-9b28-4e8c-8d2b-958c0658c9f5")
                        },
                        new
                        {
                            EntityId = new Guid("c182e464-9ccb-4e26-812f-4c90d178f57f"),
                            TagId = new Guid("fff0e828-e9c8-4ae5-b33a-df1c1f23f874")
                        },
                        new
                        {
                            EntityId = new Guid("30bc01bf-8cbe-4252-a5f6-4017f601c8c3"),
                            TagId = new Guid("7c34639f-fa83-4182-b0d1-a117e95f9430")
                        },
                        new
                        {
                            EntityId = new Guid("30bc01bf-8cbe-4252-a5f6-4017f601c8c3"),
                            TagId = new Guid("2b474a26-76d2-45ee-be3e-f38eca83d9ee")
                        },
                        new
                        {
                            EntityId = new Guid("73ccf858-3467-4a6b-a8ac-ee7cfc85f620"),
                            TagId = new Guid("7c34639f-fa83-4182-b0d1-a117e95f9430")
                        },
                        new
                        {
                            EntityId = new Guid("73ccf858-3467-4a6b-a8ac-ee7cfc85f620"),
                            TagId = new Guid("9608a36e-6e89-4852-bab4-c4c06454c1f0")
                        },
                        new
                        {
                            EntityId = new Guid("0bd380cf-78af-4338-a508-bc41afe6c1af"),
                            TagId = new Guid("7c34639f-fa83-4182-b0d1-a117e95f9430")
                        },
                        new
                        {
                            EntityId = new Guid("0bd380cf-78af-4338-a508-bc41afe6c1af"),
                            TagId = new Guid("d1a18186-9b28-4e8c-8d2b-958c0658c9f5")
                        },
                        new
                        {
                            EntityId = new Guid("59ac3930-3825-4cb2-9fe7-4ff499947176"),
                            TagId = new Guid("7c34639f-fa83-4182-b0d1-a117e95f9430")
                        },
                        new
                        {
                            EntityId = new Guid("59ac3930-3825-4cb2-9fe7-4ff499947176"),
                            TagId = new Guid("1dceded6-3990-4cb3-bc2e-936d0ae7f79d")
                        },
                        new
                        {
                            EntityId = new Guid("c401cbbc-5e22-4360-b5c5-574167cc9cf8"),
                            TagId = new Guid("7c34639f-fa83-4182-b0d1-a117e95f9430")
                        },
                        new
                        {
                            EntityId = new Guid("c401cbbc-5e22-4360-b5c5-574167cc9cf8"),
                            TagId = new Guid("d1a18186-9b28-4e8c-8d2b-958c0658c9f5")
                        },
                        new
                        {
                            EntityId = new Guid("b975c806-db88-414c-9e00-9d245ac7acc9"),
                            TagId = new Guid("7c34639f-fa83-4182-b0d1-a117e95f9430")
                        },
                        new
                        {
                            EntityId = new Guid("a032649c-5f7d-4a64-b13b-468f46764e98"),
                            TagId = new Guid("7c34639f-fa83-4182-b0d1-a117e95f9430")
                        });
                });

            modelBuilder.Entity("Uspeak.Data.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Uspeak.Data.Models.Infrastructure.RuntimeConfiguration", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Config");
                });

            modelBuilder.Entity("Uspeak.Data.Models.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CssClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TagKind")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1a18186-9b28-4e8c-8d2b-958c0658c9f5"),
                            CssClass = "adults",
                            Name = "для взрослых",
                            TagKind = 1
                        },
                        new
                        {
                            Id = new Guid("bf53a489-cdca-47c0-ac5c-3437c47c19c6"),
                            CssClass = "ch",
                            Name = "Китайский",
                            TagKind = 0
                        },
                        new
                        {
                            Id = new Guid("2b474a26-76d2-45ee-be3e-f38eca83d9ee"),
                            CssClass = "children",
                            Name = "для детей",
                            TagKind = 1
                        },
                        new
                        {
                            Id = new Guid("fff0e828-e9c8-4ae5-b33a-df1c1f23f874"),
                            CssClass = "de",
                            Name = "Немецкий",
                            TagKind = 0
                        },
                        new
                        {
                            Id = new Guid("7c34639f-fa83-4182-b0d1-a117e95f9430"),
                            CssClass = "eng",
                            Name = "Английский",
                            TagKind = 0
                        },
                        new
                        {
                            Id = new Guid("1dceded6-3990-4cb3-bc2e-936d0ae7f79d"),
                            CssClass = "exam",
                            Name = "Подготовка к экзаменам",
                            TagKind = 7
                        },
                        new
                        {
                            Id = new Guid("c4e7b67e-809a-40d2-a222-0a12f35ba22f"),
                            CssClass = "fr",
                            Name = "Французский",
                            TagKind = 0
                        },
                        new
                        {
                            Id = new Guid("b66d4365-0bb7-4ea0-9c63-86166aec8aa3"),
                            CssClass = "it",
                            Name = "Итальянский",
                            TagKind = 0
                        },
                        new
                        {
                            Id = new Guid("866787e8-9e2e-48ae-aedd-0dcbafa5edcc"),
                            CssClass = "math",
                            Name = "Математика",
                            TagKind = 0
                        },
                        new
                        {
                            Id = new Guid("a6eecf1c-207a-4214-9897-bb2403aaf9d0"),
                            CssClass = "physics",
                            Name = "Физика",
                            TagKind = 0
                        },
                        new
                        {
                            Id = new Guid("9608a36e-6e89-4852-bab4-c4c06454c1f0"),
                            CssClass = "teenagers",
                            Name = "детей средней и старшей школы",
                            TagKind = 1
                        });
                });

            modelBuilder.Entity("Uspeak.Data.Models.Tests.AnswerOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("LoosePoints")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("QuestionForeignKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RightAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WinPoints")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerOption");
                });

            modelBuilder.Entity("Uspeak.Data.Models.Tests.QuestionSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionType")
                        .HasColumnType("int");

                    b.Property<Guid>("TestForeignKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("QuestionSettings");
                });

            modelBuilder.Entity("Uspeak.Data.Models.Tests.TestSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorForeignKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseForeignKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RandomizeQuestionOrder")
                        .HasColumnType("bit");

                    b.Property<bool>("ShowRightChosesAmount")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CourseId");

                    b.ToTable("TestSettings");
                });

            modelBuilder.Entity("Uspeak.Data.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastTimePasswordChanged")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid>("PortraitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisteredTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("TypeOfUser")
                        .HasColumnType("int");

                    b.Property<string>("UserFolder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PortraitId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Uspeak.Data.Models.Courses.Course", b =>
                {
                    b.HasOne("Uspeak.Data.Models.Image", "PromoImage")
                        .WithMany()
                        .HasForeignKey("PromoImageId");
                });

            modelBuilder.Entity("Uspeak.Data.Models.EntityTag", b =>
                {
                    b.HasOne("Uspeak.Data.Models.Entity", "Entity")
                        .WithMany("EntityTags")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uspeak.Data.Models.Tag", "Tag")
                        .WithMany("EntityTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Uspeak.Data.Models.Tests.AnswerOption", b =>
                {
                    b.HasOne("Uspeak.Data.Models.Tests.QuestionSettings", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("Uspeak.Data.Models.Tests.QuestionSettings", b =>
                {
                    b.HasOne("Uspeak.Data.Models.Tests.TestSettings", "Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestId");
                });

            modelBuilder.Entity("Uspeak.Data.Models.Tests.TestSettings", b =>
                {
                    b.HasOne("Uspeak.Data.Models.Users.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("Uspeak.Data.Models.Courses.Course", "Course")
                        .WithMany("Tests")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("Uspeak.Data.Models.Users.User", b =>
                {
                    b.HasOne("Uspeak.Data.Models.Image", "Portrait")
                        .WithMany()
                        .HasForeignKey("PortraitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
